import ServerEnvironments from '@/enums/ServerEnvs.enum'
process.env.TZ = process.env.TZ || 'UTC'
process.env.NODE_ENV = process.env.NODE_ENV || ServerEnvironments.DEV

import request from 'supertest'
import app from '@/app'

const APIKey = 'lola_pk_test_TAKPkYzqUdhu3gg-weJe0P2hm8Jcg2RPXXkg'
let Token = ''

beforeAll(async () => {
  const response = await request(app)
    .post('/v1/auth/login')
    .set({ 'x-nokori-api-key': APIKey })
    .send({
      strategy: 'password',
      email: 'wes+2788@nokori.com',
      password: '9j4f19j3d3d9j3d9',
    })

  Token = response.body.data.session.accessToken
})

const mockCardObject = {
  id: 'pm_1LsR6WIEou0fWPYXXoj32qB4',
  object: 'payment_method',
  billing_details: {
    address: {
      city: null,
      country: null,
      line1: null,
      line2: null,
      postal_code: null,
      state: null,
    },
    email: null,
    name: null,
    phone: null,
  },
  card: {
    brand: 'visa',
    checks: {
      address_line1_check: null,
      address_postal_code_check: null,
      cvc_check: null,
    },
    country: 'US',
    exp_month: 1,
    exp_year: 2023,
    funding: 'credit',
    generated_from: null,
    last4: '4242',
    networks: {
      available: [
        'visa',
      ],
      preferred: null,
    },
    three_d_secure_usage: {
      supported: true,
    },
    wallet: null,
  },
  created: 1665666340,
  customer: null,
  livemode: false,
  type: 'card',
}

describe('Payments Endpoints', () => {
  it('should create a payment method for stripe', async () => {
    const response = await request(app)
      .post('/v1/payments/methods/create')
      .set({
        'x-nokori-api-key': APIKey,
        'Authorization': `Bearer ${Token}`,
      })
      .send({
        provider: 'stripe',
        paymentMethodDetails: mockCardObject, 
      })
      
    expect(response.statusCode).toEqual(200)
    expect(response.body).toBeTruthy()
    expect(response.body.data instanceof Array).toBeTruthy()
    expect(response.body.data.length).toBeGreaterThan(1)
    
  })
  
})
